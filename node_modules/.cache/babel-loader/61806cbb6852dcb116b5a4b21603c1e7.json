{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\ReactJS\\\\blog-project-assessment\\\\src\\\\Containers\\\\SearchedData\\\\SearchedData.js\";\n// JavaScript source code\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Post from '../../Components/Post/Post';\n\nclass SearchedData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getSearchValue = () => {\n      this.searchString = this.props.match.params.data; //console.log(this.searchString);\n\n      this.searchedData = this.props.posts.filter(ele => {\n        var final;\n        var value = Object.values(ele);\n\n        for (var i = 0; i < value.length; i++) {\n          final = false;\n\n          if (value[i].includes(this.searchString)) {\n            final = true;\n          }\n        }\n\n        if (final) {\n          return ele;\n        }\n      });\n      this.props.searchResults(this.searchedData);\n    };\n  }\n\n  //searchString = '';\n  //searchedData = [];\n  componentDidMount() {\n    this.getSearchValue(); //this.searchString = this.props.match.params.data;\n    //this.searchedData = this.props.posts.filter(ele => {\n    //    if (Object.values(ele).includes(this.searchString)) {\n    //        return ele;\n    //    }\n    //})\n    //this.props.searchResults(this.searchedData);\n  }\n\n  componentDidUpdate() {\n    if (this.searchString !== this.props.match.params.data) {\n      this.getSearchValue(); //this.searchString = this.props.match.params.data;\n      ////console.log(this.searchString);\n      //this.searchedData = this.props.posts.filter(ele => {\n      //    if (Object.values(ele).includes(this.searchString))\n      //        return ele;\n      //})\n      //this.props.searchResults(this.searchedData);\n      //     //this.getSearchValue();\n      //    //console.log(this.searchedData);\n    }\n  }\n\n  render() {\n    var searchedPosts = this.props.search_result.map(ele => {\n      return /*#__PURE__*/React.createElement(Post, {\n        title: ele.Title,\n        body: ele.Body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      });\n    }); //console.log(searchedData);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, searchedPosts, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Hey\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.Posts,\n    search_result: state.searchedPosts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchResults: data => {\n      dispatch({\n        type: 'SEARCH',\n        value: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchedData);","map":{"version":3,"sources":["D:/IdeaProjects/ReactJS/blog-project-assessment/src/Containers/SearchedData/SearchedData.js"],"names":["React","Component","connect","Post","SearchedData","getSearchValue","searchString","props","match","params","data","searchedData","posts","filter","ele","final","value","Object","values","i","length","includes","searchResults","componentDidMount","componentDidUpdate","render","searchedPosts","search_result","map","Title","Body","mapStateToProps","state","Posts","mapDispatchToProps","dispatch","type"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAwCjCI,cAxCiC,GAwChB,MAAM;AACnB,WAAKC,YAAL,GAAoB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAA5C,CADmB,CAEnB;;AACA,WAAKC,YAAL,GAAoB,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,GAAG,IAAI;AAC/C,YAAIC,KAAJ;AACA,YAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcJ,GAAd,CAAZ;;AACA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCJ,UAAAA,KAAK,GAAG,KAAR;;AACA,cAAIC,KAAK,CAACG,CAAD,CAAL,CAASE,QAAT,CAAkB,KAAKf,YAAvB,CAAJ,EAA0C;AACtCS,YAAAA,KAAK,GAAG,IAAR;AACH;AACJ;;AACD,YAAIA,KAAJ,EAAW;AACP,iBAAOD,GAAP;AACH;AACJ,OAZmB,CAApB;AAaA,WAAKP,KAAL,CAAWe,aAAX,CAAyB,KAAKX,YAA9B;AAEH,KA1DgC;AAAA;;AAEjC;AACA;AAIAY,EAAAA,iBAAiB,GAAG;AAChB,SAAKlB,cAAL,GADgB,CAEhB;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEH;;AAGDmB,EAAAA,kBAAkB,GAAG;AAEjB,QAAI,KAAKlB,YAAL,KAAsB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAlD,EAAwD;AACpD,WAAKL,cAAL,GADoD,CAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACC;AACJ;;AAuBDoB,EAAAA,MAAM,GAAG;AAEL,QAAIC,aAAa,GAAG,KAAKnB,KAAL,CAAWoB,aAAX,CAAyBC,GAAzB,CAA6Bd,GAAG,IAAI;AACpD,0BAAQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,GAAG,CAACe,KAAjB;AAAwB,QAAA,IAAI,EAAEf,GAAG,CAACgB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAFmB,CAApB,CAFK,CAKL;;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,aADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADJ;AAMH;;AAxEgC;;AA0ErC,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpB,IAAAA,KAAK,EAAEoB,KAAK,CAACC,KADV;AAEHN,IAAAA,aAAa,EAAEK,KAAK,CAACN;AAFlB,GAAP;AAIH,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHb,IAAAA,aAAa,EAAGZ,IAAD,IAAU;AAAEyB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBpB,QAAAA,KAAK,EAAEN;AAAzB,OAAD,CAAR;AAA2C;AADnE,GAAP;AAGH,CAJD;;AAKA,eAAeR,OAAO,CAAC6B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,YAA7C,CAAf","sourcesContent":["// JavaScript source code\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Post from '../../Components/Post/Post';\r\n\r\nclass SearchedData extends Component {\r\n    \r\n    //searchString = '';\r\n    //searchedData = [];\r\n\r\n\r\n    \r\n    componentDidMount() {\r\n        this.getSearchValue();\r\n        //this.searchString = this.props.match.params.data;\r\n        \r\n        //this.searchedData = this.props.posts.filter(ele => {\r\n        //    if (Object.values(ele).includes(this.searchString)) {\r\n        //        return ele;\r\n        //    }\r\n        //})\r\n\r\n        //this.props.searchResults(this.searchedData);\r\n       \r\n    }\r\n    \r\n\r\n    componentDidUpdate() {\r\n        \r\n        if (this.searchString !== this.props.match.params.data) {\r\n            this.getSearchValue();\r\n            //this.searchString = this.props.match.params.data;\r\n            ////console.log(this.searchString);\r\n            //this.searchedData = this.props.posts.filter(ele => {\r\n            //    if (Object.values(ele).includes(this.searchString))\r\n            //        return ele;\r\n            //})\r\n            //this.props.searchResults(this.searchedData);\r\n        //     //this.getSearchValue();\r\n\r\n        //    //console.log(this.searchedData);\r\n        }\r\n    }\r\n\r\n\r\n    getSearchValue = () => {\r\n        this.searchString = this.props.match.params.data;\r\n        //console.log(this.searchString);\r\n        this.searchedData = this.props.posts.filter(ele => {\r\n            var final;\r\n            var value = Object.values(ele);\r\n            for (var i = 0; i < value.length; i++) {\r\n                final = false;\r\n                if (value[i].includes(this.searchString)) {\r\n                    final = true;\r\n                }\r\n            }             \r\n            if (final) {\r\n                return ele;\r\n            }\r\n        })\r\n        this.props.searchResults(this.searchedData);\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        var searchedPosts = this.props.search_result.map(ele => {\r\n            return (<Post title={ele.Title} body={ele.Body } />);\r\n        });\r\n        //console.log(searchedData);\r\n        return (\r\n            <div>\r\n                {searchedPosts}\r\n                <p>Hey</p>\r\n            </div>\r\n            );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.Posts,\r\n        search_result: state.searchedPosts \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchResults: (data) => { dispatch({ type: 'SEARCH', value: data }) },\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchedData);"]},"metadata":{},"sourceType":"module"}